from .dataseries import DataSeries as DataSeries
from .linebuffer import LineActions as LineActions, LineNum as LineNum
from .lineroot import LineRoot as LineRoot, LineSingle as LineSingle
from .lineseries import LineSeries as LineSeries, LineSeriesMaker as LineSeriesMaker
from .utils import DotDict as DotDict
from .utils.py3 import range as range, string_types as string_types, with_metaclass as with_metaclass, zip as zip
from _typeshed import Incomplete

class MetaLineIterator(LineSeries.__class__):
    def donew(cls, *args, **kwargs): ...
    def dopreinit(cls, _obj, *args, **kwargs): ...
    def dopostinit(cls, _obj, *args, **kwargs): ...

class LineIterator(Incomplete):
    plotinfo: Incomplete
    def getindicators(self): ...
    def getindicators_lines(self): ...
    def getobservers(self): ...
    def addindicator(self, indicator) -> None: ...
    def bindlines(self, owner: Incomplete | None = None, own: Incomplete | None = None): ...
    bind2lines = bindlines
    bind2line = bind2lines
    def preonce(self, start, end) -> None: ...
    def oncestart(self, start, end) -> None: ...
    def once(self, start, end) -> None: ...
    def prenext(self) -> None: ...
    def nextstart(self) -> None: ...
    def next(self) -> None: ...
    def qbuffer(self, savemem: int = 0) -> None: ...

class DataAccessor(LineIterator):
    PriceClose: Incomplete
    PriceLow: Incomplete
    PriceHigh: Incomplete
    PriceOpen: Incomplete
    PriceVolume: Incomplete
    PriceOpenInteres: Incomplete
    PriceDateTime: Incomplete

class IndicatorBase(DataAccessor): ...
class ObserverBase(DataAccessor): ...
class StrategyBase(DataAccessor): ...

class SingleCoupler(LineActions):
    cdata: Incomplete
    dlen: int
    val: Incomplete
    def __init__(self, cdata, clock: Incomplete | None = None) -> None: ...
    def next(self) -> None: ...

class MultiCoupler(LineIterator):
    dlen: int
    dsize: Incomplete
    dvals: Incomplete
    def __init__(self) -> None: ...
    def next(self) -> None: ...

def LinesCoupler(cdata, clock: Incomplete | None = None, **kwargs): ...
LineCoupler = LinesCoupler
