from _typeshed import Incomplete
from backtrader.metabase import MetaParams as MetaParams
from backtrader.utils.py3 import with_metaclass as with_metaclass

class MetaSingleton(MetaParams):
    def __init__(cls, name, bases, dct) -> None: ...
    def __call__(cls, *args, **kwargs): ...

class Store(Incomplete):
    params: Incomplete
    def getdata(self, *args, **kwargs): ...
    @classmethod
    def getbroker(cls, *args, **kwargs): ...
    BrokerCls: Incomplete
    DataCls: Incomplete
    notifs: Incomplete
    datas: Incomplete
    broker: Incomplete
    def start(self, data: Incomplete | None = None, broker: Incomplete | None = None) -> None: ...
    def stop(self) -> None: ...
    def put_notification(self, msg, *args, **kwargs) -> None: ...
    def get_notifications(self): ...
