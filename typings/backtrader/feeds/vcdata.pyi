from _typeshed import Incomplete
from backtrader import TimeFrame as TimeFrame, date2num as date2num
from backtrader.feed import DataBase as DataBase
from backtrader.stores import vcstore as vcstore
from backtrader.utils.py3 import integer_types as integer_types, queue as queue, string_types as string_types, with_metaclass as with_metaclass

class MetaVCData(DataBase.__class__):
    def __init__(cls, name, bases, dct) -> None: ...

class VCData(Incomplete):
    params: Incomplete
    NULLDATE: Incomplete
    MILLISECOND: Incomplete
    PING_TIMEOUT: float
    def islive(self): ...
    store: Incomplete
    def __init__(self, **kwargs) -> None: ...
    def setenvironment(self, env) -> None: ...
    idx: int
    q: Incomplete
    qrt: Incomplete
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def haslivedata(self): ...
    def OnNewDataSerieBar(self, DataSerie, forcepush: bool = False) -> None: ...
    def ping(self) -> None: ...
    lastconn: Incomplete
    def OnInternalEvent(self, p1, p2, p3) -> None: ...
    def OnNewTicks(self, ArrayTicks) -> None: ...
    def debug_ticks(self, ticks) -> None: ...
