import collections
from _typeshed import Incomplete
from backtrader.utils.py3 import integer_types as integer_types, map as map, string_types as string_types, with_metaclass as with_metaclass

collectionsAbc = collections.abc
collectionsAbc = collections

class WriterBase(Incomplete): ...

class WriterFile(WriterBase):
    params: Incomplete
    headers: Incomplete
    values: Incomplete
    def __init__(self) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def next(self) -> None: ...
    def addheaders(self, headers) -> None: ...
    def addvalues(self, values): ...
    def writeiterable(self, iterable, func: Incomplete | None = None, counter: str = ''): ...
    def writeline(self, line) -> None: ...
    def writelines(self, lines) -> None: ...
    def writelineseparator(self, level: int = 0) -> None: ...
    def writedict(self, dct, level: int = 0, recurse: bool = False) -> None: ...

class WriterStringIO(WriterFile):
    params: Incomplete
    def __init__(self) -> None: ...
    def stop(self) -> None: ...
