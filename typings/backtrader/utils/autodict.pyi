from collections import OrderedDict

def Tree(): ...

class AutoDictList(dict):
    def __missing__(self, key): ...

class DotDict(dict):
    def __getattr__(self, key): ...

class AutoDict(dict):
    def __missing__(self, key): ...
    def __getattr__(self, key): ...
    def __setattr__(self, key, value) -> None: ...

class AutoOrderedDict(OrderedDict):
    def __missing__(self, key): ...
    def __getattr__(self, key): ...
    def __setattr__(self, key, value) -> None: ...
    def __iadd__(self, other): ...
    def __isub__(self, other): ...
    def __imul__(self, other): ...
    def __idiv__(self, other): ...
    def __itruediv__(self, other): ...
    def lvalues(self): ...
