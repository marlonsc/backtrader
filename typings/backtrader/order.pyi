from .metabase import MetaParams as MetaParams
from .utils import AutoOrderedDict as AutoOrderedDict
from .utils.py3 import iteritems as iteritems, range as range, with_metaclass as with_metaclass
from _typeshed import Incomplete

class OrderExecutionBit:
    dt: Incomplete
    size: Incomplete
    price: Incomplete
    closed: Incomplete
    opened: Incomplete
    closedvalue: Incomplete
    openedvalue: Incomplete
    closedcomm: Incomplete
    openedcomm: Incomplete
    value: Incomplete
    comm: Incomplete
    pnl: Incomplete
    psize: Incomplete
    pprice: Incomplete
    def __init__(self, dt: Incomplete | None = None, size: int = 0, price: float = 0.0, closed: int = 0, closedvalue: float = 0.0, closedcomm: float = 0.0, opened: int = 0, openedvalue: float = 0.0, openedcomm: float = 0.0, pnl: float = 0.0, psize: int = 0, pprice: float = 0.0) -> None: ...

class OrderData:
    pclose: Incomplete
    exbits: Incomplete
    dt: Incomplete
    size: Incomplete
    remsize: Incomplete
    price: Incomplete
    pricelimit: Incomplete
    trailamount: Incomplete
    trailpercent: Incomplete
    plimit: Incomplete
    value: float
    comm: float
    margin: Incomplete
    pnl: float
    psize: int
    pprice: int
    def __init__(self, dt: Incomplete | None = None, size: int = 0, price: float = 0.0, pricelimit: float = 0.0, remsize: int = 0, pclose: float = 0.0, trailamount: float = 0.0, trailpercent: float = 0.0) -> None: ...
    def __len__(self) -> int: ...
    def __getitem__(self, key): ...
    def add(self, dt, size, price, closed: int = 0, closedvalue: float = 0.0, closedcomm: float = 0.0, opened: int = 0, openedvalue: float = 0.0, openedcomm: float = 0.0, pnl: float = 0.0, psize: int = 0, pprice: float = 0.0) -> None: ...
    def addbit(self, exbit) -> None: ...
    def getpending(self): ...
    def iterpending(self): ...
    def markpending(self) -> None: ...
    def clone(self): ...

class OrderBase(Incomplete):
    params: Incomplete
    DAY: Incomplete
    T_Close: Incomplete
    T_Day: Incomplete
    T_Date: Incomplete
    T_None: Incomplete
    V_None: Incomplete
    Market: Incomplete
    Close: Incomplete
    Limit: Incomplete
    Stop: Incomplete
    StopLimit: Incomplete
    StopTrail: Incomplete
    StopTrailLimit: Incomplete
    Historical: Incomplete
    ExecTypes: Incomplete
    OrdTypes: Incomplete
    Buy: Incomplete
    Sell: Incomplete
    Created: Incomplete
    Submitted: Incomplete
    Accepted: Incomplete
    Partial: Incomplete
    Completed: Incomplete
    Canceled: Incomplete
    Expired: Incomplete
    Margin: Incomplete
    Rejected: Incomplete
    Cancelled = Canceled
    Status: Incomplete
    refbasis: Incomplete
    plimit: Incomplete
    def __getattr__(self, name): ...
    def __setattribute__(self, name, value) -> None: ...
    ref: Incomplete
    broker: Incomplete
    info: Incomplete
    comminfo: Incomplete
    triggered: bool
    status: Incomplete
    exectype: Incomplete
    size: Incomplete
    created: Incomplete
    executed: Incomplete
    position: int
    valid: Incomplete
    dteos: Incomplete
    def __init__(self) -> None: ...
    def clone(self): ...
    def getstatusname(self, status: Incomplete | None = None): ...
    def getordername(self, exectype: Incomplete | None = None): ...
    @classmethod
    def ExecType(cls, exectype): ...
    def ordtypename(self, ordtype: Incomplete | None = None): ...
    def active(self): ...
    def activate(self) -> None: ...
    def alive(self): ...
    def addcomminfo(self, comminfo) -> None: ...
    def addinfo(self, **kwargs) -> None: ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def isbuy(self): ...
    def issell(self): ...
    def setposition(self, position) -> None: ...
    plen: Incomplete
    def submit(self, broker: Incomplete | None = None) -> None: ...
    def accept(self, broker: Incomplete | None = None) -> None: ...
    def brokerstatus(self): ...
    def reject(self, broker: Incomplete | None = None): ...
    def cancel(self) -> None: ...
    def margin(self) -> None: ...
    def completed(self) -> None: ...
    def partial(self) -> None: ...
    def execute(self, dt, size, price, closed, closedvalue, closedcomm, opened, openedvalue, openedcomm, margin, pnl, psize, pprice) -> None: ...
    def expire(self): ...
    def trailadjust(self, price) -> None: ...

class Order(OrderBase):
    status: Incomplete
    def execute(self, dt, size, price, closed, closedvalue, closedcomm, opened, openedvalue, openedcomm, margin, pnl, psize, pprice) -> None: ...
    def expire(self): ...
    def trailadjust(self, price) -> None: ...

class BuyOrder(Order):
    ordtype: Incomplete

class StopBuyOrder(BuyOrder): ...
class StopLimitBuyOrder(BuyOrder): ...

class SellOrder(Order):
    ordtype: Incomplete

class StopSellOrder(SellOrder): ...
class StopLimitSellOrder(SellOrder): ...
