from _typeshed import Incomplete
from backtrader import BrokerBase as BrokerBase, BuyOrder as BuyOrder, Order as Order, SellOrder as SellOrder
from backtrader.comminfo import CommInfoBase as CommInfoBase
from backtrader.position import Position as Position
from backtrader.stores import vcstore as vcstore
from backtrader.utils.py3 import with_metaclass as with_metaclass

class VCCommInfo(CommInfoBase):
    def getvaluesize(self, size, price): ...
    def getoperationcost(self, size, price): ...

class MetaVCBroker(BrokerBase.__class__):
    def __init__(cls, name, bases, dct) -> None: ...

class VCBroker(Incomplete):
    params: Incomplete
    store: Incomplete
    startingcash: float
    startingvalue: float
    positions: Incomplete
    orderbyid: Incomplete
    notifs: Incomplete
    def __init__(self, **kwargs) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def getcash(self): ...
    def getvalue(self, datas: Incomplete | None = None): ...
    def get_notification(self): ...
    def notify(self, order) -> None: ...
    def next(self) -> None: ...
    def getposition(self, data, clone: bool = True): ...
    def getcommissioninfo(self, data): ...
    def submit(self, order, vcorder): ...
    def buy(self, owner, data, size, price: Incomplete | None = None, plimit: Incomplete | None = None, exectype: Incomplete | None = None, valid: Incomplete | None = None, tradeid: int = 0, **kwargs): ...
    def sell(self, owner, data, size, price: Incomplete | None = None, plimit: Incomplete | None = None, exectype: Incomplete | None = None, valid: Incomplete | None = None, tradeid: int = 0, **kwargs): ...
    trader: Incomplete
    def __call__(self, trader): ...
    cash: Incomplete
    value: Incomplete
    def OnChangedBalance(self, Account) -> None: ...
    def OnModifiedOrder(self, Order) -> None: ...
    def OnCancelledOrder(self, Order) -> None: ...
    def OnTotalExecutedOrder(self, Order) -> None: ...
    def OnPartialExecutedOrder(self, Order) -> None: ...
    def OnExecutedOrder(self, Order, partial) -> None: ...
    def OnOrderInMarket(self, Order) -> None: ...
    def OnNewOrderLocation(self, Order) -> None: ...
    def OnChangedOpenPositions(self, Account) -> None: ...
    def OnNewClosedOperations(self, Account) -> None: ...
    def OnServerShutDown(self) -> None: ...
    def OnInternalEvent(self, p1, p2, p3) -> None: ...
