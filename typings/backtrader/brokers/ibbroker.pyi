import ib.ext.Order
from _typeshed import Incomplete
from backtrader import BrokerBase as BrokerBase, Order as Order, OrderBase as OrderBase, date2num as date2num, num2date as num2date
from backtrader.comminfo import CommInfoBase as CommInfoBase
from backtrader.stores import ibstore as ibstore
from backtrader.utils.py3 import bstr as bstr, bytes as bytes, queue as queue, with_metaclass as with_metaclass

bytes = bstr

class IBOrderState:
    def __init__(self, orderstate) -> None: ...

class IBOrder(OrderBase, ib.ext.Order.Order):
    ordtype: Incomplete
    m_orderType: Incomplete
    m_permid: int
    m_action: Incomplete
    m_lmtPrice: float
    m_auxPrice: float
    m_trailingPercent: Incomplete
    m_trailStopPrice: Incomplete
    m_totalQuantity: Incomplete
    m_transmit: Incomplete
    m_parentId: Incomplete
    m_goodTillDate: Incomplete
    m_tif: Incomplete
    m_ocaType: int
    def __init__(self, action, **kwargs) -> None: ...

class IBCommInfo(CommInfoBase):
    def getvaluesize(self, size, price): ...
    def getoperationcost(self, size, price): ...

class MetaIBBroker(BrokerBase.__class__):
    def __init__(cls, name, bases, dct) -> None: ...

class IBBroker(Incomplete):
    params: Incomplete
    ib: Incomplete
    startingcash: float
    startingvalue: float
    orderbyid: Incomplete
    executions: Incomplete
    ordstatus: Incomplete
    notifs: Incomplete
    tonotify: Incomplete
    def __init__(self, **kwargs) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    cash: Incomplete
    def getcash(self): ...
    value: Incomplete
    def getvalue(self, datas: Incomplete | None = None): ...
    def getposition(self, data, clone: bool = True): ...
    def cancel(self, order) -> None: ...
    def orderstatus(self, order): ...
    def submit(self, order): ...
    def getcommissioninfo(self, data): ...
    def buy(self, owner, data, size, price: Incomplete | None = None, plimit: Incomplete | None = None, exectype: Incomplete | None = None, valid: Incomplete | None = None, tradeid: int = 0, **kwargs): ...
    def sell(self, owner, data, size, price: Incomplete | None = None, plimit: Incomplete | None = None, exectype: Incomplete | None = None, valid: Incomplete | None = None, tradeid: int = 0, **kwargs): ...
    def notify(self, order) -> None: ...
    def get_notification(self): ...
    def next(self) -> None: ...
    SUBMITTED: Incomplete
    FILLED: Incomplete
    CANCELLED: Incomplete
    INACTIVE: Incomplete
    PENDINGSUBMIT: Incomplete
    PENDINGCANCEL: Incomplete
    PRESUBMITTED: Incomplete
    def push_orderstatus(self, msg) -> None: ...
    def push_execution(self, ex) -> None: ...
    def push_commissionreport(self, cr) -> None: ...
    def push_portupdate(self) -> None: ...
    def push_ordererror(self, msg) -> None: ...
    def push_orderstate(self, msg) -> None: ...
